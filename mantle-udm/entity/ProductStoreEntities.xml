<?xml version="1.0" encoding="UTF-8"?>
<!--
This software is in the public domain under CC0 1.0 Universal plus a Grant of Patent License.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any
warranty.

You should have received a copy of the CC0 Public Domain Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->
<entities xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/entity-definition-1.5.xsd">
    <!-- ========================================================= -->
    <!--  - mantle.product.store -->
    <!-- ========================================================= -->

    <entity entity-name="ProductStore" package-name="mantle.product.store">
        <field name="productStoreId" type="id" is-pk="true"/>
        <field name="storeName" type="text-medium"/>
        <field name="organizationPartyId" type="id">
            <description>The Organization Party that Orders, Invoices, GL transactions, etc will be associated with.</description>
        </field>
        <field name="inventoryFacilityId" type="id"/>
        <field name="reservationOrderEnumId" type="id"/>
        <field name="requirementMethodEnumId" type="id"/>

        <field name="defaultLocale" type="text-short"/>
        <field name="defaultCurrencyUomId" type="id"/>
        <field name="defaultSalesChannelEnumId" type="id"/>

        <field name="requireCustomerRole" type="text-indicator"/>
        <field name="taxGatewayConfigId" type="id"/>

        <relationship type="one" title="Organization" related-entity-name="mantle.party.Party">
            <key-map field-name="organizationPartyId"/></relationship>
        <relationship type="one" title="Inventory" related-entity-name="mantle.facility.Facility">
            <key-map field-name="inventoryFacilityId"/></relationship>
        <relationship type="one" title="AssetReservationOrder" related-entity-name="moqui.basic.Enumeration">
            <key-map field-name="reservationOrderEnumId"/></relationship>
        <relationship type="one" title="RequirementMethod" related-entity-name="moqui.basic.Enumeration">
            <key-map field-name="requirementMethodEnumId"/></relationship>
        <relationship type="one" title="DefaultCurrency" related-entity-name="moqui.basic.Uom">
            <key-map field-name="defaultCurrencyUomId"/></relationship>
        <relationship type="one" title="DefaultSalesChannel" related-entity-name="moqui.basic.Enumeration">
            <key-map field-name="defaultSalesChannelEnumId"/></relationship>
        <relationship type="one" related-entity-name="mantle.other.tax.TaxGatewayConfig"/>

        <seed-data>
            <!-- Asset (Inventory) Reservation Order -->
            <moqui.basic.EnumerationType description="Asset (Inventory) Reservation Order" enumTypeId="AssetReservationOrder"/>
            <!-- for these records enumCode is the order by field (on mantle.product.asset.Asset), makes it easy to add new ones -->
            <moqui.basic.Enumeration description="FIFO Receive" enumId="AsResOrdFifoRec" enumCode="receivedDate" enumTypeId="AssetReservationOrder"/>
            <moqui.basic.Enumeration description="LIFO Receive" enumId="AsResOrdLifoRec" enumCode="-receivedDate" enumTypeId="AssetReservationOrder"/>
            <moqui.basic.Enumeration description="FIFO Expire" enumId="AsResOrdFifoExp" enumCode="expectedEndOfLife" enumTypeId="AssetReservationOrder"/>
            <moqui.basic.Enumeration description="LIFO Expire" enumId="AsResOrdLifoExp" enumCode="-expectedEndOfLife" enumTypeId="AssetReservationOrder"/>
            <moqui.basic.Enumeration description="Greatest Unit Cost" enumId="AsResOrdCostGr" enumCode="-acquireCost" enumTypeId="AssetReservationOrder"/>
            <moqui.basic.Enumeration description="Lowest Unit Cost" enumId="AsResOrdCostLw" enumCode="acquireCost" enumTypeId="AssetReservationOrder"/>
            <moqui.basic.Enumeration description="No Reservation" enumId="AsResOrdNoRes" enumTypeId="AssetReservationOrder"/>

            <!-- Product Requirement Method -->
            <moqui.basic.EnumerationType description="Product Requirement Method" enumTypeId="RequirementMethod"/>
            <!-- NONE: no requirement is created (default) -->
            <moqui.basic.Enumeration description="No Requirement Created" enumId="PRODRQM_NONE" enumTypeId="RequirementMethod"/>
            <!-- AUTO: a requirement is created every time a sales order is entered; This is useful to implement cross-dock shipping processes -->
            <moqui.basic.Enumeration description="Automatic For Every Sales Order" enumId="PRODRQM_AUTO" enumTypeId="RequirementMethod"/>
            <!-- STOCK: a requirement is created when qoh reaches the minimum stock quantity (from ProductFacility) -->
            <moqui.basic.Enumeration description="When QOH Reaches Minimum Stock for Product-Facility" enumId="PRODRQM_STOCK_QOH" enumTypeId="RequirementMethod"/>
            <!-- STOCK_ATP: a requirement is created when atp reaches the minimum stock quantity (from ProductFacility) -->
            <moqui.basic.Enumeration description="When ATP Reaches Minimum Stock for Product-Facility" enumId="PRODRQM_STOCK_ATP" enumTypeId="RequirementMethod"/>
            <!-- PRODRQM_DS: a drop ship group is created to trigger automatic creation of a purchase order (drop shipment) every time a sales order is created-->
            <moqui.basic.Enumeration description="Drop-ship only" enumId="PRODRQM_DS" enumTypeId="RequirementMethod"/>
            <!-- PRODRQM_DSQOH: auto drop ship on low quantity on hand -->
            <moqui.basic.Enumeration description="Auto drop-ship on low quantity" enumId="PRODRQM_DSATP" enumTypeId="RequirementMethod"/>
        </seed-data>
    </entity>
    <entity entity-name="ProductStoreCategory" package-name="mantle.product.store">
        <field name="productStoreId" type="id" is-pk="true"/>
        <field name="productCategoryId" type="id" is-pk="true"/>
        <field name="storeCategoryTypeEnumId" type="id" is-pk="true"/>
        <field name="fromDate" type="date-time" is-pk="true"/>
        <field name="thruDate" type="date-time"/>
        <field name="sequenceNum" type="number-integer"/>
        <relationship type="one" related-entity-name="mantle.product.store.ProductStore"/>
        <relationship type="one" related-entity-name="mantle.product.category.ProductCategory"/>
        <relationship type="one" title="ProductStoreCategoryType" related-entity-name="moqui.basic.Enumeration">
            <key-map field-name="storeCategoryTypeEnumId"/></relationship>
        <seed-data>
            <!-- Product Store Category Type -->
            <moqui.basic.EnumerationType description="Product Store Category Type" enumTypeId="ProductStoreCategoryType"/>
            <moqui.basic.Enumeration description="Home Page (One)" enumId="PsctHomePage" enumTypeId="ProductStoreCategoryType"/>
            <moqui.basic.Enumeration description="Browse Root (One)" enumId="PsctBrowseRoot" enumTypeId="ProductStoreCategoryType"/>
            <moqui.basic.Enumeration description="Default Search (One)" enumId="PsctSearch" enumTypeId="ProductStoreCategoryType"/>
            <moqui.basic.Enumeration description="Quick Add (Many)" enumId="PsctQuickAdd" enumTypeId="ProductStoreCategoryType"/>
            <moqui.basic.Enumeration description="Promotions (One)" enumId="PsctPromotions" enumTypeId="ProductStoreCategoryType"/>
            <moqui.basic.Enumeration description="View Allow (One)" enumId="PsctViewAllow" enumTypeId="ProductStoreCategoryType"/>
            <moqui.basic.Enumeration description="Purchase Allow (One)" enumId="PsctPurchaseAllow" enumTypeId="ProductStoreCategoryType"/>
            <moqui.basic.Enumeration description="Admin Allow (One)" enumId="PsctAdminAllow" enumTypeId="ProductStoreCategoryType"/>
        </seed-data>
    </entity>
    <entity entity-name="ProductStoreEmail" package-name="mantle.product.store">
        <field name="productStoreId" type="id" is-pk="true"/>
        <field name="emailTypeEnumId" type="id" is-pk="true"/>
        <field name="fromDate" type="date-time" is-pk="true"/>
        <field name="thruDate" type="date-time"/>
        <field name="emailTemplateId" type="id"/>
        <relationship type="one" related-entity-name="mantle.product.store.ProductStore"/>
        <relationship type="one" title="ProductStoreEmailType" related-entity-name="moqui.basic.Enumeration">
            <key-map field-name="emailTypeEnumId"/></relationship>
        <relationship type="one" related-entity-name="moqui.basic.email.EmailTemplate"/>
        <seed-data>
            <!-- Product Store Email Type -->
            <moqui.basic.EnumerationType description="Product Store Email Notification Type" enumTypeId="ProductStoreEmailType"/>
            <moqui.basic.Enumeration description="Registration" enumId="PsetRegistration" enumTypeId="ProductStoreEmailType"/>
            <moqui.basic.Enumeration description="Confirmation" enumId="PsetConfirmation" enumTypeId="ProductStoreEmailType"/>
            <moqui.basic.Enumeration description="Complete" enumId="PsetComplete" enumTypeId="ProductStoreEmailType"/>
            <moqui.basic.Enumeration description="Back-Order" enumId="PsetBackOrder" enumTypeId="ProductStoreEmailType"/>
            <moqui.basic.Enumeration description="Order Change" enumId="PsetOrderChange" enumTypeId="ProductStoreEmailType"/>
            <moqui.basic.Enumeration description="Payment Retry" enumId="PsetPaymentRetry" enumTypeId="ProductStoreEmailType"/>
            <moqui.basic.Enumeration description="Return Accepted" enumId="PsetReturnAccepted" enumTypeId="ProductStoreEmailType"/>
            <moqui.basic.Enumeration description="Return Completed" enumId="PsetReturnCompleted" enumTypeId="ProductStoreEmailType"/>
            <moqui.basic.Enumeration description="Return Cancelled" enumId="PsetReturnCancelled" enumTypeId="ProductStoreEmailType"/>
            <moqui.basic.Enumeration description="Reset Password" enumId="PsetResetPassword" enumTypeId="ProductStoreEmailType"/>
            <moqui.basic.Enumeration description="Tell-A-Friend" enumId="PsetTellAFriend" enumTypeId="ProductStoreEmailType"/>
            <moqui.basic.Enumeration description="Gift Card Purchase" enumId="PsetGiftCardPurchase" enumTypeId="ProductStoreEmailType"/>
            <moqui.basic.Enumeration description="Gift Card Reload" enumId="PsetGiftCardReload" enumTypeId="ProductStoreEmailType"/>
            <moqui.basic.Enumeration description="Quote Created" enumId="PsetQuoteCreated" enumTypeId="ProductStoreEmailType"/>
            <moqui.basic.Enumeration description="Quote Confirmation" enumId="PsetQuoteConfirmation" enumTypeId="ProductStoreEmailType"/>
            <moqui.basic.Enumeration description="Shipment Complete" enumId="PsetShipmentComplete" enumTypeId="ProductStoreEmailType"/>
        </seed-data>
    </entity>
    <entity entity-name="ProductStoreFacility" package-name="mantle.product.store">
        <field name="productStoreId" type="id" is-pk="true"/>
        <field name="facilityId" type="id" is-pk="true"/>
        <field name="fromDate" type="date-time" is-pk="true"/>
        <field name="thruDate" type="date-time"/>
        <field name="sequenceNum" type="number-integer"/>
        <relationship type="one" related-entity-name="mantle.product.store.ProductStore"/>
        <relationship type="one" related-entity-name="mantle.facility.Facility"/>
    </entity>
    <entity entity-name="ProductStoreParty" package-name="mantle.product.store">
        <field name="productStoreId" type="id" is-pk="true"/>
        <field name="partyId" type="id" is-pk="true"/>
        <field name="roleTypeId" type="id" is-pk="true"/>
        <field name="fromDate" type="date-time" is-pk="true"/>
        <field name="thruDate" type="date-time"/>
        <field name="sequenceNum" type="number-integer"/>
        <relationship type="one" related-entity-name="mantle.product.store.ProductStore"/>
        <relationship type="one" related-entity-name="mantle.party.Party"/>
        <relationship type="one" related-entity-name="mantle.party.RoleType"/>
    </entity>
    <entity entity-name="ProductStorePaymentGateway" package-name="mantle.product.store">
        <field name="productStoreId" type="id" is-pk="true"/>
        <field name="paymentInstrumentEnumId" type="id" is-pk="true"/>
        <field name="paymentGatewayConfigId" type="id"/>
        <relationship type="one" related-entity-name="mantle.product.store.ProductStore"/>
        <relationship type="one" title="PaymentInstrument" related-entity-name="moqui.basic.Enumeration">
            <key-map field-name="paymentInstrumentEnumId"/></relationship>
        <relationship type="one" related-entity-name="mantle.account.method.PaymentGatewayConfig"/>
    </entity>
    <entity entity-name="ProductStoreShippingGateway" package-name="mantle.product.store">
        <field name="productStoreId" type="id" is-pk="true"/>
        <field name="carrierPartyId" type="id" is-pk="true"/>
        <field name="shippingGatewayConfigId" type="id"/>
        <relationship type="one" related-entity-name="mantle.product.store.ProductStore"/>
        <relationship type="one" title="Carrier" related-entity-name="mantle.party.Party">
            <key-map field-name="carrierPartyId"/></relationship>
        <relationship type="one" related-entity-name="mantle.shipment.carrier.ShippingGatewayConfig"/>
    </entity>

    <entity entity-name="ProductStoreGroup" package-name="mantle.product.store">
        <field name="productStoreGroupId" type="id" is-pk="true"/>
        <field name="storeGroupTypeEnumId" type="id"/>
        <field name="description" type="text-medium"/>
        <relationship type="one" title="ProductStoreGroupType" related-entity-name="moqui.basic.Enumeration">
            <key-map field-name="storeGroupTypeEnumId"/></relationship>
    </entity>
    <entity entity-name="ProductStoreGroupMember" package-name="mantle.product.store">
        <field name="productStoreGroupId" type="id" is-pk="true"/>
        <field name="productStoreId" type="id" is-pk="true"/>
        <field name="fromDate" type="date-time" is-pk="true"/>
        <field name="thruDate" type="date-time"/>
        <field name="sequenceNum" type="number-integer"/>
        <relationship type="one" related-entity-name="mantle.product.store.ProductStore"/>
        <relationship type="one" related-entity-name="mantle.product.store.ProductStoreGroup"/>
    </entity>
    <entity entity-name="ProductStoreGroupParty" package-name="mantle.product.store">
        <field name="productStoreGroupId" type="id" is-pk="true"/>
        <field name="partyId" type="id" is-pk="true"/>
        <field name="roleTypeId" type="id" is-pk="true"/>
        <field name="fromDate" type="date-time" is-pk="true"/>
        <field name="thruDate" type="date-time"/>
        <relationship type="one" related-entity-name="mantle.product.store.ProductStoreGroup"/>
        <relationship type="one" related-entity-name="mantle.party.Party"/>
        <relationship type="one" related-entity-name="mantle.party.RoleType"/>
    </entity>
</entities>
